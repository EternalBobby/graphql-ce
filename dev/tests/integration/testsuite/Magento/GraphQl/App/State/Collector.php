<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
declare(strict_types=1);

namespace Magento\GraphQl\App\State;

use Magento\Framework\ObjectManagerInterface;

class Collector
{
    /**
     * @var ObjectManagerInterface
     */
    private $objectManager;

    /**
     * @param ObjectManagerInterface $objectManager
     */
    public function __construct(ObjectManagerInterface $objectManager)
    {
        $this->objectManager = $objectManager;
    }

    /**
     * @return array
     * @throws \Exception
     */
    public function getSharedObjects(): array
    {
        $obj = new \ReflectionObject($this->objectManager);
        if (!$obj->hasProperty('_sharedInstances')) {
            throw new \Exception('Cannot get shared objects from ' . \get_class($this->objectManager));
        }
        $property = $obj->getProperty('_sharedInstances');
        $property->setAccessible(true);
        $sharedObjects = array_filter($property->getValue($this->objectManager), function ($object) {
            if ($object instanceof \Magento\Framework\ObjectManagerInterface) {
                return false;
            }
            $isProxy = function ($class) {
                if (false !== strpos($class, '\\Proxy')) {
                    //tODO: check that proxy of autogenerated
                    return false;
                }
                return true;
            };

            return $isProxy(\get_class($object));
        });

        return array_map(function ($object) {
            $objReflection = new \ReflectionObject($object);
            $properties = [];

            foreach ($objReflection->getProperties() as $property) {
                $propName = $property->getName();
                $property->setAccessible(true);
                $value = $property->getValue($object);
                if (\is_object($value)) {
                    // shared objects already present in Object Manager.
                    // TODO: take care about objects that were created from Factory and not present in OM
                    $properties[$propName] = $value;
                    continue;
                } else {
                    $properties[$propName] = $value;
                }
            }
            return $properties;
        }, $sharedObjects);
    }
}
